#=====================================================================
# idforge.1.gz
#=====================================================================

[idforge.1]
render-type         = "asciidoc"
render-logic        = "remove-first"
render-flow         = "manpage"
render-from         = "${PWD}/Library/Manuals/${CONFIG_SECTION}.asciidoc"
render-from-po      = "${PWD}/Library/Manuals/Locales/${IDFORGE_LANG_LC}/${CONFIG_SECTION}.po"
docbook-exports     = "manpage"
xml-expand          = "=MANPAGE_VERSION=${IDFORGE_VERSION}"
xml-expand          = "=MANPAGE_DESCRIPTION=$(${0} --description)"
xml-expand          = "=MANPAGE_SYNOPSIS=$(${0} | head -n 1 | sed -r 's,^.+(idforge),\1,')"
xml-expand          = "=MANPAGE_YEAR=$(date '+%Y')"
xml-expand          = "=MANPAGE_OTHERS=$(cd ./Library/Manuals; OTHERS=$(ls *.asciidoc | grep -v ${CONFIG_SECTION} | sed -r 's/\.([[:digit:]])\.asciidoc/(\1),/'); echo ${OTHERS} | sed 's/,$//')"

[idforge.1.gz]
render-type         = "gz"
render-from         = "${PWD}/Library/Manuals/Final/${IDFORGE_LANG_LC}/idforge.1"
render-directory    = "${PWD}/Library/Manuals/Final/${IDFORGE_LANG_LC}"

#=====================================================================
# idforge-hello.1.gz
#=====================================================================
[idforge-hello.1]
render-type         = "asciidoc"
render-flow         = "manpage"
render-from         = "${PWD}/Library/Manuals/${CONFIG_SECTION}.asciidoc"
render-from-po      = "${PWD}/Library/Manuals/Locales/${IDFORGE_LANG_LC}/${CONFIG_SECTION}.po"
docbook-exports     = "manpage"
xml-expand          = "=MANPAGE_VERSION=${IDFORGE_VERSION}"
xml-expand          = "=MANPAGE_DESCRIPTION=$(${0} hello --description)"
xml-expand          = "=MANPAGE_SYNOPSIS=$(${0} hello | head -n 1 | sed -r 's,^.+(idforge),\1,')"
xml-expand          = "=MANPAGE_YEAR=$(date '+%Y')"
xml-expand          = "=MANPAGE_OTHERS=$(cd ./Library/Manuals; OTHERS=$(ls *.asciidoc | grep -v ${CONFIG_SECTION} | sed -r 's/\.([[:digit:]])\.asciidoc/(\1),/'); echo ${OTHERS} | sed 's/,$//')"

[idforge-hello.1.gz]
render-type         = "gz"
render-from         = "${PWD}/Library/Manuals/Final/${IDFORGE_LANG_LC}/idforge-hello.1"
render-directory    = "${PWD}/Library/Manuals/Final/${IDFORGE_LANG_LC}"

#=====================================================================
# idforge-modules.5.gz
#=====================================================================

[idforge-modules.5]
render-type         = "asciidoc"
render-flow         = "manpage"
render-from         = "${PWD}/Library/Manuals/${CONFIG_SECTION}.asciidoc"
render-from-po      = "${PWD}/Library/Manuals/Locales/${IDFORGE_LANG_LC}/${CONFIG_SECTION}.po"
docbook-exports     = "manpage"
xml-expand          = "=MANPAGE_VERSION=${IDFORGE_VERSION}"
xml-expand          = "=MANPAGE_YEAR=$(date '+%Y')"
xml-expand          = "=MANPAGE_OTHERS=$(cd ./Library/Manuals; OTHERS=$(ls *.asciidoc | grep -v ${CONFIG_SECTION} | sed -r 's/\.([[:digit:]])\.asciidoc/(\1),/'); echo ${OTHERS} | sed 's/,$//')"

[idforge-modules.5.gz]
render-type         = "gz"
render-from         = "${PWD}/Library/Manuals/Final/${IDFORGE_LANG_LC}/idforge-modules.5"
render-directory    = "${PWD}/Library/Manuals/Final/${IDFORGE_LANG_LC}"

#=====================================================================
# idforge-config.1.gz
#=====================================================================

[idforge-config.1]
render-type         = "asciidoc"
render-flow         = "manpage"
render-from         = "${PWD}/Library/Manuals/${CONFIG_SECTION}.asciidoc"
render-from-po      = "${PWD}/Library/Manuals/Locales/${IDFORGE_LANG_LC}/${CONFIG_SECTION}.po"
docbook-exports     = "manpage"
xml-expand          = "=MANPAGE_VERSION=${IDFORGE_VERSION}"
xml-expand          = "=MANPAGE_SYNOPSIS=$(${0} config | head -n 1 | sed -r 's,^.+(idforge),\1,')"
xml-expand          = "=MANPAGE_DESCRIPTION=$(${0} config --description)"
xml-expand          = "=MANPAGE_YEAR=$(date '+%Y')"
xml-expand          = "=MANPAGE_OTHERS=$(cd ./Library/Manuals; OTHERS=$(ls *.asciidoc | grep -v ${CONFIG_SECTION} | sed -r 's/\.([[:digit:]])\.asciidoc/(\1),/'); echo ${OTHERS} | sed 's/,$//')"

[idforge-config.1.gz]
render-type         = "gz"
render-from         = "${PWD}/Library/Manuals/Final/${IDFORGE_LANG_LC}/idforge-config.1"
render-directory    = "${PWD}/Library/Manuals/Final/${IDFORGE_LANG_LC}"

#=====================================================================
# idforge-locale.1.gz
#=====================================================================

[idforge-locale.1]
render-type         = "asciidoc"
render-flow         = "manpage"
render-from         = "${PWD}/Library/Manuals/${CONFIG_SECTION}.asciidoc"
render-from-po      = "${PWD}/Library/Manuals/Locales/${IDFORGE_LANG_LC}/${CONFIG_SECTION}.po"
docbook-exports     = "manpage"
xml-expand          = "=MANPAGE_VERSION=${IDFORGE_VERSION}"
xml-expand          = "=MANPAGE_SYNOPSIS=$(${0} locale | head -n 1 | sed -r 's,^.+(idforge),\1,')"
xml-expand          = "=MANPAGE_DESCRIPTION=$(${0} locale --description)"
xml-expand          = "=MANPAGE_YEAR=$(date '+%Y')"
xml-expand          = "=MANPAGE_OTHERS=$(cd ./Library/Manuals; OTHERS=$(ls *.asciidoc | grep -v ${CONFIG_SECTION} | sed -r 's/\.([[:digit:]])\.asciidoc/(\1),/'); echo ${OTHERS} | sed 's/,$//')"

[idforge-locale.1.gz]
render-type         = "gz"
render-from         = "${PWD}/Library/Manuals/Final/${IDFORGE_LANG_LC}/idforge-locale.1"
render-directory    = "${PWD}/Library/Manuals/Final/${IDFORGE_LANG_LC}"

#=====================================================================
# idforge-config.1.gz
#=====================================================================

[idforge-render.1]
render-type         = "asciidoc"
render-flow         = "manpage"
render-from         = "${PWD}/Library/Manuals/${CONFIG_SECTION}.asciidoc"
render-from-po      = "${PWD}/Library/Manuals/Locales/${IDFORGE_LANG_LC}/${CONFIG_SECTION}.po"
docbook-exports     = "manpage"
xml-expand          = "=MANPAGE_VERSION=${IDFORGE_VERSION}"
xml-expand          = "=MANPAGE_SYNOPSIS=$(${0} render | head -n 1 | sed -r 's,^.+(idforge),\1,')"
xml-expand          = "=MANPAGE_DESCRIPTION=$(${0} render --description)"
xml-expand          = "=MANPAGE_YEAR=$(date '+%Y')"
xml-expand          = "=MANPAGE_OTHERS=$(cd ./Library/Manuals; OTHERS=$(ls *.asciidoc | grep -v ${CONFIG_SECTION} | sed -r 's/\.([[:digit:]])\.asciidoc/(\1),/'); echo ${OTHERS} | sed 's/,$//')"

[idforge-render.1.gz]
render-type         = "gz"
render-from         = "${PWD}/Library/Manuals/Final/${IDFORGE_LANG_LC}/idforge-render.1"
render-directory    = "${PWD}/Library/Manuals/Final/${IDFORGE_LANG_LC}"

#=====================================================================
# idforge-qatest.1.gz
#=====================================================================

[idforge-qatest.1]
render-type         = "asciidoc"
render-flow         = "manpage"
render-from         = "${PWD}/Library/Manuals/${CONFIG_SECTION}.asciidoc"
render-from-po      = "${PWD}/Library/Manuals/Locales/${IDFORGE_LANG_LC}/${CONFIG_SECTION}.po"
render-directory    = "${PWD}/Library/Manuals/Final"
docbook-exports     = "manpage"
xml-expand          = "=MANPAGE_VERSION=${IDFORGE_VERSION}"
xml-expand          = "=MANPAGE_SYNOPSIS=$(${0} qatest | head -n 1 | sed -r 's,^.+(idforge),\1,')"
xml-expand          = "=MANPAGE_DESCRIPTION=$(${0} qatest --description)"
xml-expand          = "=MANPAGE_YEAR=$(date '+%Y')"
xml-expand          = "=MANPAGE_OTHERS=$(cd ./Library/Manuals; OTHERS=$(ls *.asciidoc | grep -v ${CONFIG_SECTION} | sed -r 's/\.([[:digit:]])\.asciidoc/(\1),/'); echo ${OTHERS} | sed 's/,$//')"

[idforge-qatest.1.gz]
render-type         = "gz"
render-from         = "${PWD}/Library/Manuals/Final/${IDFORGE_LANG_LC}/idforge-qatest.1"
render-directory    = "${PWD}/Library/Manuals/Final/${IDFORGE_LANG_LC}"

#=====================================================================
# idforge-prepare.1.gz
#=====================================================================

[idforge-prepare.1]
render-type         = "asciidoc"
render-flow         = "manpage"
render-from         = "${PWD}/Library/Manuals/${CONFIG_SECTION}.asciidoc"
render-from-po      = "${PWD}/Library/Manuals/Locales/${IDFORGE_LANG_LC}/${CONFIG_SECTION}.po"
render-directory    = "${PWD}/Library/Manuals/Final"
docbook-exports     = "manpage"
xml-expand          = "=MANPAGE_VERSION=${IDFORGE_VERSION}"
xml-expand          = "=MANPAGE_SYNOPSIS=$(${0} prepare | head -n 1 | sed -r 's,^.+(idforge),\1,')"
xml-expand          = "=MANPAGE_DESCRIPTION=$(${0} prepare --description)"
xml-expand          = "=MANPAGE_YEAR=$(date '+%Y')"
xml-expand          = "=MANPAGE_OTHERS=$(cd ./Library/Manuals; OTHERS=$(ls *.asciidoc | grep -v ${CONFIG_SECTION} | sed -r 's/\.([[:digit:]])\.asciidoc/(\1),/'); echo ${OTHERS} | sed 's/,$//')"

[idforge-prepare.1.gz]
render-type         = "gz"
render-from         = "${PWD}/Library/Manuals/Final/${IDFORGE_LANG_LC}/idforge-prepare.1"
render-directory    = "${PWD}/Library/Manuals/Final/${IDFORGE_LANG_LC}"

#=====================================================================
# idforge-tuneup.1.gz
#=====================================================================

[idforge-tuneup.1]
render-type         = "asciidoc"
render-flow         = "manpage"
render-from         = "${PWD}/Library/Manuals/${CONFIG_SECTION}.asciidoc"
render-from-po      = "${PWD}/Library/Manuals/Locales/${IDFORGE_LANG_LC}/${CONFIG_SECTION}.po"
render-directory    = "${PWD}/Library/Manuals/Final"
docbook-exports     = "manpage"
xml-expand          = "=MANPAGE_VERSION=${IDFORGE_VERSION}"
xml-expand          = "=MANPAGE_SYNOPSIS=$(${0} tuneup | head -n 1 | sed -r 's,^.+(idforge),\1,')"
xml-expand          = "=MANPAGE_DESCRIPTION=$(${0} tuneup --description)"
xml-expand          = "=MANPAGE_YEAR=$(date '+%Y')"
xml-expand          = "=MANPAGE_OTHERS=$(cd ./Library/Manuals; OTHERS=$(ls *.asciidoc | grep -v ${CONFIG_SECTION} | sed -r 's/\.([[:digit:]])\.asciidoc/(\1),/'); echo ${OTHERS} | sed 's/,$//')"

[idforge-tuneup.1.gz]
render-type         = "gz"
render-from         = "${PWD}/Library/Manuals/Final/${IDFORGE_LANG_LC}/idforge-tuneup.1"
render-directory    = "${PWD}/Library/Manuals/Final/${IDFORGE_LANG_LC}"
