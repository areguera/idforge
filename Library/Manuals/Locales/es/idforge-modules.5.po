msgid ""
msgstr ""
"Project-Id-Version: idforge-modules.5\n"
"POT-Creation-Date: 2015-03-14 01:12-0400\n"
"PO-Revision-Date: 2015-03-14 01:12-0400\n"
"Last-Translator: The CentOS Documentation SIG <centos-docs@centos.org>\n"
"Language-Team: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid "idforge-modules"
msgstr ""

msgid "5"
msgstr ""

msgid "idFORGE Framework"
msgstr ""

msgid "=MANPAGE_VERSION="
msgstr ""

msgid "File Formats and Conventions"
msgstr "Formatos de ficheros y convenciones"

msgid "Describes idforge module environments."
msgstr ""

msgid ""
"The module environment of <emphasis role=\"strong\">idforge(1)</emphasis> is "
"a collection of Bash functions grouped by meaning and executed based on "
"specific conditions only. Each module environment can be nested inside "
"another to create a chain of individual execution environments with their "
"own scopes. The higher module environment is visible to all its subsequent "
"module environments, but not the opposite."
msgstr ""

msgid ""
"The modular design of <emphasis role=\"strong\">idforge(1)</emphasis> allows "
"you to optimize the construction of your shell scripts based on the features "
"you want to implement. For example, consider the case of printing both "
"command’s usage and version information. The output of these actions is "
"conceptually different, so each one has its own module inside <emphasis role="
"\"strong\">idforge(1)</emphasis> (e.g., <emphasis role=\"strong\">usage</"
"emphasis> and <emphasis role=\"strong\">version</emphasis>, respectively). "
"When you request usage information only the functions related to usage "
"information are loaded. No function related to version information is loaded "
"in such case."
msgstr ""

msgid ""
"The modular design of <emphasis role=\"strong\">idforge(1)</emphasis> was "
"introduced in tcar-0.5, making it possible to divide long tasks into smaller "
"tasks easier to debug, maintain and share with other modules efficiently. "
"After version 0.12, the <emphasis role=\"strong\">tcar</emphasis> package "
"was renamed to <emphasis role=\"strong\">idforge</emphasis>, and its version "
"number reset to 0.1."
msgstr ""

msgid "Module Environment"
msgstr ""

msgid ""
"When you execute <emphasis role=\"strong\">idforge(1)</emphasis> it creates "
"a shell environment in which variables and functions can be defined. This "
"environment has the highest scope and contains variables and functions that "
"will always be available in subsequent module environments."
msgstr ""

msgid "Execution environment of hello module"
msgstr ""

#, no-wrap
msgid ""
"idforge.sh                              <co id=\"CO1-1\"></co>\n"
"`-- idforge()                           <co id=\"CO1-2\"></co>\n"
"    `-- idforge_setModuleEnvironment()  <co id=\"CO1-3\"></co>\n"
"        `-- hello()                     <co id=\"CO1-4\"></co>"
msgstr ""

msgid "Script initialization"
msgstr ""

msgid "Library initialization"
msgstr ""

msgid "Module initialization"
msgstr ""

msgid "Module environment"
msgstr ""

msgid ""
"A module environment is a collection of functions that perform small tasks "
"and can be further executed in a specific order to produce specific results. "
"They are executed and destroyed at demand based on their hierarchy (e.g., "
"whether they are \"parent modules\", \"child modules\", or \"sibling modules"
"\")."
msgstr ""

msgid ""
"<xref linkend=\"module-environments-in-action\"/> shows how module "
"environments are created and destroyed after executing the the following "
"command:"
msgstr ""

#, no-wrap
msgid "]$ idforge hello --camel Hello"
msgstr ""

msgid "Module environments in action"
msgstr ""

#, no-wrap
msgid ""
"03/08/2015 04:20:52 PM =========================&gt;       [0] idforge\n"
"03/08/2015 04:20:52 PM IDFORGE_MODULE_BASEDIR           Library/Modules\n"
"03/08/2015 04:20:52 PM IDFORGE_MODULE_NAME              hello\n"
"03/08/2015 04:20:52 PM IDFORGE_MODULE_TYPE              parent\n"
"03/08/2015 04:20:52 PM IDFORGE_MODULE_DIR               Library/Modules/Hello\n"
"03/08/2015 04:20:52 PM IDFORGE_MODULE_ARGUMENT          --camel Hello\n"
"03/08/2015 04:20:52 PM IDFORGE_MODULE_DIR_MODULES       Library/Modules/Hello/Modules\n"
"03/08/2015 04:20:52 PM IDFORGE_MODULE_DIR_CONFIGS       Library/Modules/Hello/Configs\n"
"03/08/2015 04:20:52 PM IDFORGE_MODULE_INIT_FILE         Library/Modules/Hello/hello.sh\n"
"03/08/2015 04:20:52 PM TEXTDOMAIN                       idforge-hello\n"
"03/08/2015 04:20:52 PM TEXTDOMAINDIR                    /usr/share/locale\n"
"03/08/2015 04:20:52 PM export -f                        hello\n"
"03/08/2015 04:20:52 PM export -f                        hello_setOptions\n"
"03/08/2015 04:20:52 PM -------------------------&gt;       hello --camel Hello\n"
"03/08/2015 04:20:52 PM =========================&gt;       [1] hello\n"
"03/08/2015 04:20:52 PM IDFORGE_MODULE_BASEDIR           Library/Modules/Hello/Modules\n"
"03/08/2015 04:20:52 PM IDFORGE_MODULE_NAME              output\n"
"03/08/2015 04:20:52 PM IDFORGE_MODULE_TYPE              child\n"
"03/08/2015 04:20:52 PM IDFORGE_MODULE_DIR               Library/Modules/Hello/Modules/Output\n"
"03/08/2015 04:20:52 PM IDFORGE_MODULE_ARGUMENT          Hello\n"
"03/08/2015 04:20:52 PM IDFORGE_MODULE_DIR_MODULES       Library/Modules/Hello/Modules/Output/Modules\n"
"03/08/2015 04:20:52 PM IDFORGE_MODULE_DIR_CONFIGS       Library/Modules/Hello/Modules/Output/Configs\n"
"03/08/2015 04:20:52 PM IDFORGE_MODULE_INIT_FILE         Library/Modules/Hello/Modules/Output/output.sh\n"
"03/08/2015 04:20:52 PM TEXTDOMAIN                       idforge-hello\n"
"03/08/2015 04:20:52 PM TEXTDOMAINDIR                    /usr/share/locale\n"
"03/08/2015 04:20:52 PM export -f                        output\n"
"03/08/2015 04:20:52 PM -------------------------&gt;       output Hello\n"
"03/08/2015 04:20:52 PM =========================&gt;       [2] output\n"
"03/08/2015 04:20:52 PM IDFORGE_MODULE_BASEDIR           Library/Modules/Hello/Modules/Output/Modules\n"
"03/08/2015 04:20:52 PM IDFORGE_MODULE_NAME              camel\n"
"03/08/2015 04:20:52 PM IDFORGE_MODULE_TYPE              child\n"
"03/08/2015 04:20:52 PM IDFORGE_MODULE_DIR               Library/Modules/Hello/Modules/Output/Modules/Camel\n"
"03/08/2015 04:20:52 PM IDFORGE_MODULE_ARGUMENT\n"
"03/08/2015 04:20:52 PM IDFORGE_MODULE_DIR_MODULES       Library/Modules/Hello/Modules/Output/Modules/Camel/Modules\n"
"03/08/2015 04:20:52 PM IDFORGE_MODULE_DIR_CONFIGS       Library/Modules/Hello/Modules/Output/Modules/Camel/Configs\n"
"03/08/2015 04:20:52 PM IDFORGE_MODULE_INIT_FILE         Library/Modules/Hello/Modules/Output/Modules/Camel/camel.sh\n"
"03/08/2015 04:20:52 PM TEXTDOMAIN                       idforge-hello\n"
"03/08/2015 04:20:52 PM TEXTDOMAINDIR                    /usr/share/locale\n"
"03/08/2015 04:20:52 PM export -f                        camel\n"
"03/08/2015 04:20:52 PM -------------------------&gt;       camel\n"
"03/08/2015 04:20:52 PM =========================&gt;       [3] camel\n"
"03/08/2015 04:20:52 PM IDFORGE_MODULE_BASEDIR           Library/Modules/Hello/Modules/Output/Modules\n"
"03/08/2015 04:20:52 PM IDFORGE_MODULE_NAME              upper\n"
"03/08/2015 04:20:52 PM IDFORGE_MODULE_TYPE              sibling\n"
"03/08/2015 04:20:52 PM IDFORGE_MODULE_DIR               Library/Modules/Hello/Modules/Output/Modules/Upper\n"
"03/08/2015 04:20:52 PM IDFORGE_MODULE_ARGUMENT\n"
"03/08/2015 04:20:52 PM IDFORGE_MODULE_DIR_MODULES       Library/Modules/Hello/Modules/Output/Modules/Upper/Modules\n"
"03/08/2015 04:20:52 PM IDFORGE_MODULE_DIR_CONFIGS       Library/Modules/Hello/Modules/Output/Modules/Upper/Configs\n"
"03/08/2015 04:20:52 PM IDFORGE_MODULE_INIT_FILE         Library/Modules/Hello/Modules/Output/Modules/Upper/upper.sh\n"
"03/08/2015 04:20:52 PM TEXTDOMAIN                       idforge-hello\n"
"03/08/2015 04:20:52 PM TEXTDOMAINDIR                    /usr/share/locale\n"
"03/08/2015 04:20:52 PM export -f                        upper\n"
"03/08/2015 04:20:52 PM -------------------------&gt;       upper\n"
"H\n"
"03/08/2015 04:20:52 PM IDFORGE_MODULE_EXIT              0\n"
"03/08/2015 04:20:52 PM &lt;-------------------------       upper\n"
"03/08/2015 04:20:52 PM unset -f                         upper\n"
"03/08/2015 04:20:53 PM &lt;=========================       [3] camel\n"
"03/08/2015 04:20:53 PM TEXTDOMAIN                       idforge-hello\n"
"03/08/2015 04:20:53 PM TEXTDOMAINDIR                    /usr/share/locale\n"
"03/08/2015 04:20:53 PM =========================&gt;       [3] camel\n"
"03/08/2015 04:20:53 PM IDFORGE_MODULE_BASEDIR           Library/Modules/Hello/Modules/Output/Modules\n"
"03/08/2015 04:20:53 PM IDFORGE_MODULE_NAME              lower\n"
"03/08/2015 04:20:53 PM IDFORGE_MODULE_TYPE              sibling\n"
"03/08/2015 04:20:53 PM IDFORGE_MODULE_DIR               Library/Modules/Hello/Modules/Output/Modules/Lower\n"
"03/08/2015 04:20:53 PM IDFORGE_MODULE_ARGUMENT\n"
"03/08/2015 04:20:53 PM IDFORGE_MODULE_DIR_MODULES       Library/Modules/Hello/Modules/Output/Modules/Lower/Modules\n"
"03/08/2015 04:20:53 PM IDFORGE_MODULE_DIR_CONFIGS       Library/Modules/Hello/Modules/Output/Modules/Lower/Configs\n"
"03/08/2015 04:20:53 PM IDFORGE_MODULE_INIT_FILE         Library/Modules/Hello/Modules/Output/Modules/Lower/lower.sh\n"
"03/08/2015 04:20:53 PM TEXTDOMAIN                       idforge-hello\n"
"03/08/2015 04:20:53 PM TEXTDOMAINDIR                    /usr/share/locale\n"
"03/08/2015 04:20:53 PM export -f                        lower\n"
"03/08/2015 04:20:53 PM -------------------------&gt;       lower\n"
"e\n"
"03/08/2015 04:20:53 PM IDFORGE_MODULE_EXIT              0\n"
"03/08/2015 04:20:53 PM &lt;-------------------------       lower\n"
"03/08/2015 04:20:53 PM unset -f                         lower\n"
"03/08/2015 04:20:53 PM &lt;=========================       [3] camel\n"
"03/08/2015 04:20:53 PM TEXTDOMAIN                       idforge-hello\n"
"03/08/2015 04:20:53 PM TEXTDOMAINDIR                    /usr/share/locale\n"
"03/08/2015 04:20:53 PM =========================&gt;       [3] camel\n"
"03/08/2015 04:20:53 PM IDFORGE_MODULE_BASEDIR           Library/Modules/Hello/Modules/Output/Modules\n"
"03/08/2015 04:20:53 PM IDFORGE_MODULE_NAME              upper\n"
"03/08/2015 04:20:53 PM IDFORGE_MODULE_TYPE              sibling\n"
"03/08/2015 04:20:53 PM IDFORGE_MODULE_DIR               Library/Modules/Hello/Modules/Output/Modules/Upper\n"
"03/08/2015 04:20:53 PM IDFORGE_MODULE_ARGUMENT\n"
"03/08/2015 04:20:53 PM IDFORGE_MODULE_DIR_MODULES       Library/Modules/Hello/Modules/Output/Modules/Upper/Modules\n"
"03/08/2015 04:20:53 PM IDFORGE_MODULE_DIR_CONFIGS       Library/Modules/Hello/Modules/Output/Modules/Upper/Configs\n"
"03/08/2015 04:20:53 PM IDFORGE_MODULE_INIT_FILE         Library/Modules/Hello/Modules/Output/Modules/Upper/upper.sh\n"
"03/08/2015 04:20:53 PM TEXTDOMAIN                       idforge-hello\n"
"03/08/2015 04:20:53 PM TEXTDOMAINDIR                    /usr/share/locale\n"
"03/08/2015 04:20:53 PM export -f                        upper\n"
"03/08/2015 04:20:53 PM -------------------------&gt;       upper\n"
"L\n"
"03/08/2015 04:20:53 PM IDFORGE_MODULE_EXIT              0\n"
"03/08/2015 04:20:53 PM &lt;-------------------------       upper\n"
"03/08/2015 04:20:53 PM unset -f                         upper\n"
"03/08/2015 04:20:53 PM &lt;=========================       [3] camel\n"
"03/08/2015 04:20:53 PM TEXTDOMAIN                       idforge-hello\n"
"03/08/2015 04:20:53 PM TEXTDOMAINDIR                    /usr/share/locale\n"
"03/08/2015 04:20:53 PM =========================&gt;       [3] camel\n"
"03/08/2015 04:20:53 PM IDFORGE_MODULE_BASEDIR           Library/Modules/Hello/Modules/Output/Modules\n"
"03/08/2015 04:20:53 PM IDFORGE_MODULE_NAME              lower\n"
"03/08/2015 04:20:53 PM IDFORGE_MODULE_TYPE              sibling\n"
"03/08/2015 04:20:53 PM IDFORGE_MODULE_DIR               Library/Modules/Hello/Modules/Output/Modules/Lower\n"
"03/08/2015 04:20:53 PM IDFORGE_MODULE_ARGUMENT\n"
"03/08/2015 04:20:53 PM IDFORGE_MODULE_DIR_MODULES       Library/Modules/Hello/Modules/Output/Modules/Lower/Modules\n"
"03/08/2015 04:20:53 PM IDFORGE_MODULE_DIR_CONFIGS       Library/Modules/Hello/Modules/Output/Modules/Lower/Configs\n"
"03/08/2015 04:20:53 PM IDFORGE_MODULE_INIT_FILE         Library/Modules/Hello/Modules/Output/Modules/Lower/lower.sh\n"
"03/08/2015 04:20:53 PM TEXTDOMAIN                       idforge-hello\n"
"03/08/2015 04:20:53 PM TEXTDOMAINDIR                    /usr/share/locale\n"
"03/08/2015 04:20:53 PM export -f                        lower\n"
"03/08/2015 04:20:53 PM -------------------------&gt;       lower\n"
"l\n"
"03/08/2015 04:20:53 PM IDFORGE_MODULE_EXIT              0\n"
"03/08/2015 04:20:53 PM &lt;-------------------------       lower\n"
"03/08/2015 04:20:53 PM unset -f                         lower\n"
"03/08/2015 04:20:53 PM &lt;=========================       [3] camel\n"
"03/08/2015 04:20:53 PM TEXTDOMAIN                       idforge-hello\n"
"03/08/2015 04:20:53 PM TEXTDOMAINDIR                    /usr/share/locale\n"
"03/08/2015 04:20:53 PM =========================&gt;       [3] camel\n"
"03/08/2015 04:20:53 PM IDFORGE_MODULE_BASEDIR           Library/Modules/Hello/Modules/Output/Modules\n"
"03/08/2015 04:20:53 PM IDFORGE_MODULE_NAME              upper\n"
"03/08/2015 04:20:53 PM IDFORGE_MODULE_TYPE              sibling\n"
"03/08/2015 04:20:53 PM IDFORGE_MODULE_DIR               Library/Modules/Hello/Modules/Output/Modules/Upper\n"
"03/08/2015 04:20:53 PM IDFORGE_MODULE_ARGUMENT\n"
"03/08/2015 04:20:53 PM IDFORGE_MODULE_DIR_MODULES       Library/Modules/Hello/Modules/Output/Modules/Upper/Modules\n"
"03/08/2015 04:20:53 PM IDFORGE_MODULE_DIR_CONFIGS       Library/Modules/Hello/Modules/Output/Modules/Upper/Configs\n"
"03/08/2015 04:20:53 PM IDFORGE_MODULE_INIT_FILE         Library/Modules/Hello/Modules/Output/Modules/Upper/upper.sh\n"
"03/08/2015 04:20:53 PM TEXTDOMAIN                       idforge-hello\n"
"03/08/2015 04:20:53 PM TEXTDOMAINDIR                    /usr/share/locale\n"
"03/08/2015 04:20:53 PM export -f                        upper\n"
"03/08/2015 04:20:53 PM -------------------------&gt;       upper\n"
"O\n"
"03/08/2015 04:20:53 PM IDFORGE_MODULE_EXIT              0\n"
"03/08/2015 04:20:53 PM &lt;-------------------------       upper\n"
"03/08/2015 04:20:53 PM unset -f                         upper\n"
"03/08/2015 04:20:53 PM &lt;=========================       [3] camel\n"
"03/08/2015 04:20:53 PM TEXTDOMAIN                       idforge-hello\n"
"03/08/2015 04:20:53 PM TEXTDOMAINDIR                    /usr/share/locale\n"
"03/08/2015 04:20:53 PM IDFORGE_MODULE_EXIT              0\n"
"03/08/2015 04:20:53 PM &lt;-------------------------       camel\n"
"03/08/2015 04:20:53 PM unset -f                         camel\n"
"03/08/2015 04:20:53 PM &lt;=========================       [2] output\n"
"03/08/2015 04:20:53 PM TEXTDOMAIN                       idforge-hello\n"
"03/08/2015 04:20:53 PM TEXTDOMAINDIR                    /usr/share/locale\n"
"03/08/2015 04:20:53 PM IDFORGE_MODULE_EXIT              0\n"
"03/08/2015 04:20:53 PM &lt;-------------------------       output Hello\n"
"03/08/2015 04:20:53 PM unset -f                         output\n"
"03/08/2015 04:20:53 PM &lt;=========================       [1] hello\n"
"03/08/2015 04:20:53 PM TEXTDOMAIN                       idforge-hello\n"
"03/08/2015 04:20:53 PM TEXTDOMAINDIR                    /usr/share/locale\n"
"03/08/2015 04:20:53 PM IDFORGE_MODULE_EXIT              0\n"
"03/08/2015 04:20:53 PM &lt;-------------------------       hello --camel Hello\n"
"03/08/2015 04:20:53 PM unset -f                         hello\n"
"03/08/2015 04:20:53 PM unset -f                         hello_setOptions\n"
"03/08/2015 04:20:53 PM &lt;=========================       [0] idforge\n"
"03/08/2015 04:20:53 PM TEXTDOMAIN                       idforge\n"
"03/08/2015 04:20:53 PM TEXTDOMAINDIR                    /usr/share/locale\n"
"03/08/2015 04:20:53 PM IDFORGE_EXIT                     0"
msgstr ""

msgid "Parent Modules"
msgstr ""

msgid ""
"A new parent module environment is initiated when you call the following "
"function:"
msgstr ""

#, no-wrap
msgid "idforge_setModuleEnvironment -t \"parent\" -m \"modulename\""
msgstr ""

msgid ""
"When the <emphasis role=\"strong\">--debug</emphasis> option is provided in "
"the <emphasis role=\"strong\">idforge(1)</emphasis> command-line, the "
"sibling modules are identified by the word <emphasis role=\"strong\">parent</"
"emphasis> on the right side of IDFORGE_MODULE_TYPE environment variable."
msgstr ""

msgid ""
"Parent modules are very simple in design and you can use them to implement "
"simple solutions quickly. Normally, when you execute a parent module, you "
"initiate the highest module environment possible inside <emphasis role="
"\"strong\">idforge(1)</emphasis> execution environment. Parent modules are "
"frequently used to define module-specifc global variables, interpret module-"
"specific options passed through the command-line and execute the appropriate "
"actions based on them (e.g., executing a chain of child modules)."
msgstr ""

msgid "idforge-hello parent module directory layout"
msgstr ""

#, no-wrap
msgid ""
"Library/Modules/Hello/\n"
"|-- hello.sh                        <co id=\"CO2-1\"></co>\n"
"|-- hello_setOptions.sh             <co id=\"CO2-2\"></co>\n"
"`-- Modules\n"
"    `-- Output\n"
"        |-- Modules\n"
"        |   |-- Camel\n"
"        |   |   `-- camel.sh\n"
"        |   |-- Lower\n"
"        |   |   `-- lower.sh\n"
"        |   |-- Random\n"
"        |   |   `-- random.sh\n"
"        |   `-- Upper\n"
"        |       `-- upper.sh\n"
"        `-- output.sh\n"
"\n"
"7 directories, 7 files"
msgstr ""

msgid "Module initialization."
msgstr ""

msgid "Module command-line parser."
msgstr ""

msgid ""
"The module’s initialization contains the module’s main function definition. "
"The function definition is written using the long definition format (i.e., "
"it must begin with the word <literal>function</literal>, then the function "
"name, and finally the <literal>{</literal> character). The name of the "
"function is exactly the same of the initialization file but without the "
"<literal>.sh</literal> extension. These conditions are required in order for "
"<emphasis role=\"strong\">idforge(1)</emphasis> script to execute the "
"function definition and destroy it when it is no longer used. See <xref "
"linkend=\"hello\"/>."
msgstr ""

msgid ""
"Inside the function definition you write all the commands you want the "
"module to run, once executed. The function definition can be as simple as "
"one single line of code or as complex as you can imagine (too complex code "
"is sign of bad design, so keep it simple). It is the place where you express "
"your solutions."
msgstr ""

msgid ""
"In case you notice the initialization file is growing up inevitably, you can "
"reduce its code by refactoring it. To do so, you can use resources like "
"module-specific functions and child modules. These resources are described "
"in <xref linkend=\"module-optimization\"/>, and they help you to keep the "
"initialization file in a simple state, easy to understand, maintain and "
"debug."
msgstr ""

msgid "hello.sh"
msgstr ""

#, no-wrap
msgid ""
"#!/bin/bash\n"
"######################################################################\n"
"#\n"
"#   idFORGE Framework - Manage identity manuals in community\n"
"#   Copyright © 2015 CentOS Artwork SIG\n"
"#\n"
"#   idFORGE Framework is free software; you can redistribute it and/or\n"
"#   modify it under the terms of the GNU General Public License as\n"
"#   published by the Free Software Foundation; either version 2 of the\n"
"#   License, or (at your option) any later version.\n"
"#\n"
"#   idFORGE Framework is distributed in the hope that it will be\n"
"#   useful, but WITHOUT ANY WARRANTY; without even the implied\n"
"#   warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n"
"#   See the GNU General Public License for more details.\n"
"#\n"
"#   You should have received a copy of the GNU General Public License\n"
"#   along with idFORGE Framework; if not, write to the Free Software\n"
"#   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.\n"
"#\n"
"#   Alain Reguera Delgado &lt;alain.reguera@gmail.com&gt;\n"
"#   39 Street No. 4426 Cienfuegos, Cuba.\n"
"#\n"
"######################################################################\n"
"\n"
"# Print greeting messages and exit successfully.\n"
"function hello {\n"
"\n"
"    # Initialize module's flags.\n"
"    local HELLO_FLAGS=''\n"
"\n"
"    # Initialize command-line arguments and interpret arguments and\n"
"    # options passed through command-line.\n"
"    local ARGUMENT='' ARGUMENTS=''; hello_setOptions \"${@}\"\n"
"\n"
"    # Verify existence of command-line arguments. When they don't\n"
"    # exist, just return to caller. This is necessary to print the\n"
"    # module's usage information cleanly.\n"
"    [[ -z ${ARGUMENTS} ]] &amp;&amp; return\n"
"\n"
"    # Execute output child module to process actions for each\n"
"    # argument.\n"
"    for ARGUMENT in ${ARGUMENTS};do\n"
"        idforge_setModuleEnvironment -m 'output' -t 'child' -g \"${ARGUMENT}\"\n"
"    done\n"
"\n"
"}"
msgstr ""

msgid ""
"When you write functions for <emphasis role=\"strong\">idforge(1)</emphasis> "
"modules you must add a top comment describing the legal status of the source "
"code you write and contributed. The source code of <emphasis role=\"strong"
"\">idforge(1)</emphasis> is distributed under the terms of GNU Public "
"License (GPL) version 2. This repetitive legal information needs to be "
"present in all function scripts that make <emphasis role=\"strong\">idforge"
"(1)</emphasis> to avoid unexpected misunderstanding about the legal status "
"of the source code, so as to protect the overall operation of it (see the "
"section \"How to Apply These Terms to Your New Programs\" in the LICENSE "
"file)."
msgstr ""

msgid "Module Optimization"
msgstr ""

msgid ""
"The module environment the <emphasis role=\"strong\">idforge(1)</emphasis> "
"command provides has four resources that you can use to optimize your module "
"implementations. These resources are <emphasis role=\"strong\">related "
"functions</emphasis>, <emphasis role=\"strong\">child modules</emphasis>, "
"<emphasis role=\"strong\">sibling modules</emphasis> and <emphasis role="
"\"strong\">recursive modules</emphasis>."
msgstr ""

msgid "Related Functions"
msgstr ""

msgid ""
"Related functions or module-specific functions are very useful when you need "
"to refactor a module implementation. Related functions must be created "
"thinking in executing them always, whenever the module scope they pertain to "
"is executed. Such an example of this usage is how parent modules parse "
"arguments provided in the command-line. For example, the initialization "
"script <xref linkend=\"hello\"/> uses the <xref linkend=\"hello_setOptions\"/"
"> related function to interpret the arguments passed through the command-"
"line. Notice how many lines in the initialization script has been reduced."
msgstr ""

msgid ""
"Related functions are written using the module’s name, then an underscore "
"(<literal>\\_</literal>), then a descriptive name and, finally, the "
"<literal>.sh</literal> extension. The function definition inside the "
"function file also follows such convention but excludes the <literal>.sh</"
"literal> extension from name (e.g., the function file "
"<literal>hello_setOptions.sh</literal> has a function definition named "
"<literal>hello_setOptions</literal> inside). These conventions are used to "
"export and destroy the related functions when new module environments are "
"created and destroyed. If you create related function files with a pattern "
"different from that described here, they will not be executed nor available "
"inside the initialization file of the module environment being currently "
"executed."
msgstr ""

msgid "hello_setOptions.sh"
msgstr ""

#, no-wrap
msgid ""
"# ... top comment removed for brevity\n"
"# Interpret module-specific options for hello.\n"
"function hello_setOptions {\n"
"\n"
"    # Define short options we want to support.\n"
"    local ARGSS=\"h,v,s,g:,l,u,c,r\"\n"
"\n"
"    # Define long options we want to support.\n"
"    local ARGSL=\"help,version,description,lower,upper,camel,random\"\n"
"\n"
"    # Redefine arguments using getopt(1) command parser and reset\n"
"    # positional parameters on this function, using output produced\n"
"    # from (getopt) arguments parser.\n"
"    ARGUMENTS=$(idforge_setArguments \"${@}\")\n"
"    [[ ${?} -ne 0 ]] &amp;&amp; idforge_printMessage \"`gettext \"The argument verification failed\"`\" --as-error-line\n"
"    eval set -- \"${ARGUMENTS}\"\n"
"\n"
"    # Look for options passed through command-line.\n"
"    while true; do\n"
"        case \"${1}\" in\n"
"\n"
"            -h | --help )\n"
"                idforge_printHelp\n"
"                shift 1\n"
"                ;;\n"
"\n"
"            -v | --version )\n"
"                idforge_setModuleEnvironment -t 'parent' -m 'version' -g ${IDFORGE_MODULE_NAME}\n"
"                shift 1\n"
"                ;;\n"
"\n"
"            -s | --description )\n"
"                idforge_printMessage \"`gettext \"Print a greeting and exit successfully.\"`\" --as-stdout-line\n"
"                shift 1\n"
"                ;;\n"
"\n"
"            -l | --lower )\n"
"                HELLO_FLAGS=\"${HELLO_FLAGS} lower\"\n"
"                shift 1\n"
"                ;;\n"
"\n"
"            -u | --upper )\n"
"                HELLO_FLAGS=\"${HELLO_FLAGS} upper\"\n"
"                shift 1\n"
"                ;;\n"
"\n"
"            -c | --camel )\n"
"                HELLO_FLAGS=\"${HELLO_FLAGS} camel\"\n"
"                shift 1\n"
"                ;;\n"
"\n"
"            -r | --random )\n"
"                HELLO_FLAGS=\"${HELLO_FLAGS} random\"\n"
"                shift 1\n"
"                ;;\n"
"\n"
"            -- )\n"
"                shift 1\n"
"                break\n"
"                ;;\n"
"        esac\n"
"    done\n"
"\n"
"    # Redefine arguments using current positional parameters. Only\n"
"    # paths should remain as arguments at this point.\n"
"    ARGUMENTS=\"${@}\"\n"
"\n"
"}"
msgstr ""

msgid ""
"The related function <xref linkend=\"hello_setOptions\"/> presents the "
"construction standard we use inside <emphasis role=\"strong\">idforge(1)</"
"emphasis> for parsing arguments passed through the command-line in a per-"
"module basis. As convention, all the parent modules definitions you write "
"must be able to interpret the <emphasis role=\"strong\">--help</emphasis>, "
"<emphasis role=\"strong\">--version</emphasis> and <emphasis role=\"strong"
"\">--description</emphasis> options using the construction described here."
msgstr ""

msgid ""
"Related functions aren’t very efficient when you need to execute them based "
"on specific conditions. When a module is executed, related functions are "
"exported to <emphasis role=\"strong\">idforge(1)</emphasis> shell "
"environment. They remain there, consuming memory, until the module they "
"belong to is destroyed. If you create a related function and never execute "
"it, it will consume memory, as well, and will end up being a waste of "
"resources. So, use related functions when you are absolutely sure they will "
"be executed at some point, in one single iteration of <emphasis role=\"strong"
"\">idforge(1)</emphasis>. If you need to execute functions based on specific "
"conditions, use child modules, instead."
msgstr ""

msgid "Child Modules"
msgstr ""

msgid ""
"A new child module environment is initiated when you call the following "
"function:"
msgstr ""

#, no-wrap
msgid "idforge_setModuleEnvironment -t \"child\" -m \"modulename\""
msgstr ""

msgid ""
"When the <emphasis role=\"strong\">--debug</emphasis> option is provided in "
"the <emphasis role=\"strong\">idforge(1)</emphasis> command-line, the "
"sibling modules are identified by the word <emphasis role=\"strong\">child</"
"emphasis> on the right side of IDFORGE_MODULE_TYPE environment variable."
msgstr ""

msgid ""
"The child modules have the characteristic of being nested modules. They "
"cannot be executed directly from the command-line. Normally, child modules "
"are executed from one parent modules but they can be executed from other "
"child modules, as well."
msgstr ""

msgid ""
"When several child modules are executed in one single iteration of <emphasis "
"role=\"strong\">idforge(1)</emphasis>, they create a chain of modules. Chain "
"of modules are generally created when you want to divide one large task into "
"smaller tasks and also control which of these smaller tasks is executed "
"based on specific conditions (e.g., you may want to render images or "
"documentation, but not both, in one single iteration of <emphasis role="
"\"strong\">idforge(1)</emphasis> script)."
msgstr ""

msgid ""
"In a chain of modules, lower modules in the chain (those started last) have "
"access to information set by modules higher in the chain (those started "
"first), but not in the opposite order. When processing information this way, "
"modules aren’t destroyed until the last module executed in the chain has "
"finished its work (e.g., all the commands inside it have been executed). At "
"that point, child modules are destroyed automatically in the reverse order "
"they were executed."
msgstr ""

msgid ""
"<xref linkend=\"module-environments-in-action\"/> shows the child modules' "
"ability of reducing scope as they get deeper in the chain of executed "
"modules. However, child modules lack the possibility of nesting modules that "
"share the same scope. For instance, <xref linkend=\"module-environments-in-"
"action\"/>, you cannot execute the modules <emphasis role=\"strong\">lower</"
"emphasis> or <emphasis role=\"strong\">upper</emphasis> from <emphasis role="
"\"strong\">camel</emphasis> module, as if they were child modules of "
"<emphasis role=\"strong\">camel</emphasis> module. That is not possible "
"because they all have the same scope, which is, to print the greeting "
"message to standard output."
msgstr ""

msgid ""
"The child modules are an effective way of expanding the scope of the chain "
"of module environment based on specific condition. However, when module "
"environments share the same level of hierarchy in the directory structure "
"they cannot be called as child one from another. In such cases, you need to "
"use <emphasis role=\"strong\">sibling modules</emphasis>, instead."
msgstr ""

msgid "Sibling Modules"
msgstr ""

msgid ""
"A new sibling module environment is initiated when you call the following "
"function:"
msgstr ""

#, no-wrap
msgid "idforge_setModuleEnvironment -t \"sibling\" -m \"modulename\""
msgstr ""

msgid ""
"When the <emphasis role=\"strong\">--debug</emphasis> option is provided in "
"the <emphasis role=\"strong\">idforge(1)</emphasis> command-line, the "
"sibling modules are identified by the word <emphasis role=\"strong"
"\">sibling</emphasis> on the right side of IDFORGE_MODULE_TYPE environment "
"variable."
msgstr ""

msgid ""
"The sibling modules are another type of nested modules but, in contrast to "
"child modules, sibling modules cannot be executed from parent modules. "
"Normally, sibling modules are executed from other sibling modules but, "
"considering the context, they can be executed from child modules too, to "
"initiate sibling processing."
msgstr ""

msgid ""
"When several siblings modules are executed, they also build a chain of "
"modules. In contrast to chain of child modules, the chain of sibling modules "
"destroys the last sibling module executed before executing the next sibling "
"module. This makes the chain to stop its growing at sibling module "
"processing, unless you call a child module from a sibling module. In which "
"case, the chain expansion would continue growing as long as the number of "
"child modules you execute. This process becomes more visible when you take a "
"look at <xref linkend=\"module-environments-in-action\"/>."
msgstr ""

msgid ""
"Normally, one module is executed at some point and destroyed at the same "
"point when it has finished its work, however, what if the next immediate "
"module you are about to execute is the same module you are about to destroy? "
"This is, you need to execute the last module in the chain of executed "
"modules again, but, this time, from itself. In cases like this, the "
"<emphasis role=\"strong\">idforge(1)</emphasis> script doesn’t destroy the "
"last module. It cannot, because you are certainly executing a new module "
"from itself, so it has to wait for this new call to finish in order to be "
"destroyed. This kind of processing is known as \"processing sibling modules "
"recursively.\""
msgstr ""

msgid "Recursive Modules"
msgstr ""

msgid ""
"When one module environment executes as sibling of itself we are in presence "
"of a recursive sibling module execution. The recursive execution of sibling "
"modules doesn’t destroy the last module in the chain of executed modules and "
"doesn’t increment or decrement the module counter either. The module counter "
"is somehow frozen until a different module environment is executed. In cases "
"like this, the last module environment remains in memory for the new module "
"execution so it can be reused. This process becomes more visible when you "
"take a look at <xref linkend=\"debug-recursive-modules\"/>."
msgstr ""

msgid ""
"When you execute sibling modules recursively, you must be very careful not "
"to get trapped into an endless loop."
msgstr ""

msgid "Processing execution of modules recursively"
msgstr ""

#, no-wrap
msgid ""
"03/08/2015 04:49:44 PM =========================&gt;       [0] idforge\n"
"03/08/2015 04:49:44 PM IDFORGE_MODULE_BASEDIR           Library/Modules\n"
"03/08/2015 04:49:44 PM IDFORGE_MODULE_NAME              hello\n"
"03/08/2015 04:49:44 PM IDFORGE_MODULE_TYPE              parent\n"
"03/08/2015 04:49:44 PM IDFORGE_MODULE_DIR               Library/Modules/Hello\n"
"03/08/2015 04:49:44 PM IDFORGE_MODULE_ARGUMENT          --random Hello\n"
"03/08/2015 04:49:44 PM IDFORGE_MODULE_DIR_MODULES       Library/Modules/Hello/Modules\n"
"03/08/2015 04:49:44 PM IDFORGE_MODULE_DIR_CONFIGS       Library/Modules/Hello/Configs\n"
"03/08/2015 04:49:44 PM IDFORGE_MODULE_INIT_FILE         Library/Modules/Hello/hello.sh\n"
"03/08/2015 04:49:44 PM TEXTDOMAIN                       idforge-hello\n"
"03/08/2015 04:49:44 PM TEXTDOMAINDIR                    /usr/share/locale\n"
"03/08/2015 04:49:44 PM export -f                        hello\n"
"03/08/2015 04:49:44 PM export -f                        hello_setOptions\n"
"03/08/2015 04:49:44 PM -------------------------&gt;       hello --random Hello\n"
"03/08/2015 04:49:44 PM =========================&gt;       [1] hello\n"
"03/08/2015 04:49:44 PM IDFORGE_MODULE_BASEDIR           Library/Modules/Hello/Modules\n"
"03/08/2015 04:49:44 PM IDFORGE_MODULE_NAME              output\n"
"03/08/2015 04:49:44 PM IDFORGE_MODULE_TYPE              child\n"
"03/08/2015 04:49:44 PM IDFORGE_MODULE_DIR               Library/Modules/Hello/Modules/Output\n"
"03/08/2015 04:49:44 PM IDFORGE_MODULE_ARGUMENT          Hello\n"
"03/08/2015 04:49:44 PM IDFORGE_MODULE_DIR_MODULES       Library/Modules/Hello/Modules/Output/Modules\n"
"03/08/2015 04:49:44 PM IDFORGE_MODULE_DIR_CONFIGS       Library/Modules/Hello/Modules/Output/Configs\n"
"03/08/2015 04:49:44 PM IDFORGE_MODULE_INIT_FILE         Library/Modules/Hello/Modules/Output/output.sh\n"
"03/08/2015 04:49:44 PM TEXTDOMAIN                       idforge-hello\n"
"03/08/2015 04:49:44 PM TEXTDOMAINDIR                    /usr/share/locale\n"
"03/08/2015 04:49:44 PM export -f                        output\n"
"03/08/2015 04:49:44 PM -------------------------&gt;       output Hello\n"
"03/08/2015 04:49:44 PM =========================&gt;       [2] output\n"
"03/08/2015 04:49:44 PM IDFORGE_MODULE_BASEDIR           Library/Modules/Hello/Modules/Output/Modules\n"
"03/08/2015 04:49:44 PM IDFORGE_MODULE_NAME              random\n"
"03/08/2015 04:49:44 PM IDFORGE_MODULE_TYPE              child\n"
"03/08/2015 04:49:44 PM IDFORGE_MODULE_DIR               Library/Modules/Hello/Modules/Output/Modules/Random\n"
"03/08/2015 04:49:44 PM IDFORGE_MODULE_ARGUMENT\n"
"03/08/2015 04:49:44 PM IDFORGE_MODULE_DIR_MODULES       Library/Modules/Hello/Modules/Output/Modules/Random/Modules\n"
"03/08/2015 04:49:44 PM IDFORGE_MODULE_DIR_CONFIGS       Library/Modules/Hello/Modules/Output/Modules/Random/Configs\n"
"03/08/2015 04:49:44 PM IDFORGE_MODULE_INIT_FILE         Library/Modules/Hello/Modules/Output/Modules/Random/random.sh\n"
"03/08/2015 04:49:44 PM TEXTDOMAIN                       idforge-hello\n"
"03/08/2015 04:49:44 PM TEXTDOMAINDIR                    /usr/share/locale\n"
"03/08/2015 04:49:44 PM export -f                        random\n"
"03/08/2015 04:49:44 PM -------------------------&gt;       random\n"
"l\n"
"03/08/2015 04:49:45 PM =========================&gt;       [3] random\n"
"03/08/2015 04:49:45 PM ~~~~~~~~~~~~~~~~~~~~~~~~~&gt;       random\n"
"l\n"
"03/08/2015 04:49:45 PM =========================&gt;       [3] random\n"
"03/08/2015 04:49:45 PM ~~~~~~~~~~~~~~~~~~~~~~~~~&gt;       random\n"
"l\n"
"03/08/2015 04:49:45 PM =========================&gt;       [3] random\n"
"03/08/2015 04:49:45 PM ~~~~~~~~~~~~~~~~~~~~~~~~~&gt;       random\n"
"e\n"
"03/08/2015 04:49:45 PM =========================&gt;       [3] random\n"
"03/08/2015 04:49:45 PM ~~~~~~~~~~~~~~~~~~~~~~~~~&gt;       random\n"
"H\n"
"03/08/2015 04:49:45 PM IDFORGE_MODULE_EXIT              0\n"
"03/08/2015 04:49:45 PM &lt;-------------------------       random\n"
"03/08/2015 04:49:45 PM unset -f                         random\n"
"03/08/2015 04:49:45 PM &lt;=========================       [2] output\n"
"03/08/2015 04:49:45 PM TEXTDOMAIN                       idforge-hello\n"
"03/08/2015 04:49:45 PM TEXTDOMAINDIR                    /usr/share/locale\n"
"03/08/2015 04:49:45 PM IDFORGE_MODULE_EXIT              0\n"
"03/08/2015 04:49:45 PM &lt;-------------------------       output Hello\n"
"03/08/2015 04:49:45 PM unset -f                         output\n"
"03/08/2015 04:49:45 PM &lt;=========================       [1] hello\n"
"03/08/2015 04:49:45 PM TEXTDOMAIN                       idforge-hello\n"
"03/08/2015 04:49:45 PM TEXTDOMAINDIR                    /usr/share/locale\n"
"03/08/2015 04:49:45 PM IDFORGE_MODULE_EXIT              0\n"
"03/08/2015 04:49:45 PM &lt;-------------------------       hello --random Hello\n"
"03/08/2015 04:49:45 PM unset -f                         hello\n"
"03/08/2015 04:49:45 PM unset -f                         hello_setOptions\n"
"03/08/2015 04:49:45 PM &lt;=========================       [0] idforge\n"
"03/08/2015 04:49:45 PM TEXTDOMAIN                       idforge\n"
"03/08/2015 04:49:45 PM TEXTDOMAINDIR                    /usr/share/locale\n"
"03/08/2015 04:49:45 PM IDFORGE_EXIT                     0"
msgstr ""

msgid ""
"Recursive execution of modules occurs only when the module you are executing "
"is considered sibling of the last module executed in the chain of executed "
"modules and they both have the same name. The fact that no variable name is "
"printed out in <xref linkend=\"debug-recursive-modules\"/> means that they "
"were not created. The arrows' style changes from <literal>→</literal> to "
"<literal>~&gt;</literal> meaning that module-specific functions weren’t "
"exported for the new module execution either. It also means that the "
"initialization script is reusing both related functions and variables from "
"the last module environment in the chain of executed modules. In this case "
"the <emphasis role=\"strong\">random</emphasis> module."
msgstr ""

msgid "Files"
msgstr ""

msgid "Library/"
msgstr ""

msgid "…"
msgstr ""

msgid "Library/Modules/Name/&lt;name&gt;.sh"
msgstr ""

msgid "Sell scripts for module initialization"
msgstr ""

msgid "Library/Modules/Name/&lt;name&gt;_setOptions.sh"
msgstr ""

msgid "Shell script used to define the module’s command-line."
msgstr ""

msgid "Library/Modules/Name/Modules/"
msgstr ""

msgid ""
"This directory contains nested modules (e.g., child modules) and is used for "
"extending the current module functionality in a modular way. There isn’t a "
"visible limitation in the number of Modules directories you can nest inside "
"one module to achieve certain functionality so, you can create as many "
"levels of Modules directories as you need."
msgstr ""

msgid "Locales/"
msgstr ""

msgid ""
"This directory contains shell scripts' localization files in PO format. The "
"content of this directory is managed using the <emphasis role=\"strong"
"\">idforge-locale(1)</emphasis> command with the \"Locales/idforge.conf\" "
"configuration file as argument."
msgstr ""

msgid "Manuals/"
msgstr ""

msgid ""
"This directory contains shell scripts' documentation manuals in asciidoc "
"format as well as a Locales/ sub-directory to manage localization of "
"documentation manuals. Documentation manuals are organized one per command "
"(e.g., <emphasis role=\"strong\">idforge(1)</emphasis> documentation is in "
"idforge.1.asciidoc, <emphasis role=\"strong\">idforge-render(1)</emphasis> "
"documentation would be idforge-render.1.asciidoc, and so on for each "
"command). The localization of documentation manuals in this directory are "
"manged by <emphasis role=\"strong\">idforge-locale(1)</emphasis> command and "
"the Manuals/idforge.conf configuration file."
msgstr ""

msgid "Author"
msgstr "Autor"

msgid ""
"Written by Alain Reguera Delgado &lt;<ulink url=\"mailto:alain.reguera@gmail."
"com\">alain.reguera@gmail.com</ulink>&gt;"
msgstr ""
"Escrito por Alain Reguera Delgado &lt;<ulink url=\"mailto:alain."
"reguera@gmail.com\">alain.reguera@gmail.com</ulink>&gt;"

msgid "Reporting Bugs"
msgstr "Reportando Errores"

msgid ""
"Report bugs to CentOS developers mailing list &lt;<ulink url=\"mailto:centos-"
"devel@centos.org\">centos-devel@centos.org</ulink>&gt;"
msgstr ""
"Reporte los problemas a la lista de correo de los desarrolladores de CentOS "
"&lt;<ulink url=\"mailto:centos-devel@centos.org\">centos-devel@centos.org</"
"ulink>&gt;"

msgid "Copyright"
msgstr "Restricciones para la distribución de copias"

msgid "Copyright © =MANPAGE_YEAR= The CentOS Artwork SIG"
msgstr ""

msgid ""
"idFORGE Framework is free software; you can redistribute it and/or modify it "
"under the terms of the GNU General Public License as published by the Free "
"Software Foundation; either version 2 of the License, or (at your option) "
"any later version."
msgstr ""
"idFORGE Framework es software libre; usted puede redistribuirlo y/o "
"modificarlo bajo los términos de la Licencia Pública General de GNU como se "
"publicó por la Free Software Foundation; ya sea en la versión 2 de la "
"Licencia, o (a su opinión) cualquier versión posterior."

msgid ""
"idFORGE Framework is distributed in the hope that it will be useful, but "
"WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY "
"or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for "
"more details."
msgstr ""
"idFORGE Framework es distribuido en la expectativa de que será util, pero "
"SIN NINGUNA GARANTÍA; incluso sin la garantía implicita de COMERCIALIZACIÓN "
"o IDIONIDAD PARA UN PROPÓSIGO PARTICULAR. Vease la Licencia General Pública "
"de GNU para los detalles."

msgid ""
"You should have received a copy of the GNU General Public License along with "
"idFORGE Framework; if not, write to the Free Software Foundation, Inc., 675 "
"Mass Ave, Cambridge, MA 02139, USA."
msgstr ""
"Usted debe haber recibido una copia de la Licencia General Pública de GNU "
"junto a idFORGE Framework; de lo contrario, escriba a la Free Software "
"Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA."

msgid "See Also"
msgstr "Vea Además"

msgid "=MANPAGE_OTHERS="
msgstr ""

#. Put one translator per line, in the form of NAME <EMAIL>, YEAR1, YEAR2
msgid "translator-credits"
msgstr "Alain Reguera Delgado <alain.reguera@gmail.com>, 2015"
